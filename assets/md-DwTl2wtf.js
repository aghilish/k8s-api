import{aI as c,o as a,c as p,k as m,e,ag as o,b as n,ac as i,g as l,q as h,s as g,B as r}from"./modules/vue-BebfbKGa.js";import{I as v}from"./slidev/default-B81VXgPc.js";import{u as f,f as w}from"./slidev/context-B0zjanlD.js";import"./index-DBDwOc4H.js";import"./modules/shiki-C1Dbg5Bc.js";const N={__name:"slide1.md__slidev_30",setup(C){const{$slidev:R,$nav:y,$clicksContext:u,$clicks:D,$page:b,$renderContext:k,$frontmatter:d}=f();return u.setup(),(x,t)=>{const s=c("click");return a(),p(v,h(g(r(w)(r(d),29))),{default:m(()=>[t[3]||(t[3]=e("h1",null,"Final Remarks",-1)),o((a(),n("div",null,t[0]||(t[0]=[e("br",null,null,-1),e("h1",null,"Validation Ratcheting",-1),e("p",null,[i("Kubernetes supports "),e("code",null,"validation ratcheting"),i(" when adding new validations to an existing CRD. This allows updates, as long as the parts of the object that fail validation are not touched by the update.")],-1)]))),[[s]]),o((a(),n("div",null,t[1]||(t[1]=[e("h1",null,"Deleting a CustomResourceDefinition",-1),e("p",null,"Deleting a CRD removes its REST API and deletes all associated custom objects. Recreating it will start fresh.",-1)]))),[[s]]),o((a(),n("div",null,t[2]||(t[2]=[e("h1",null,"Conclusion",-1),e("p",null,"CRDs let you store and retrieve structured data. That’s often enough. But combining a CRD with a controller adds automation. Note that some controllers don’t require new CRDs—they can watch existing Kubernetes resources.",-1)]))),[[s]]),l(" Validation ratcheting lets you evolve your CRD schemas safely. If old data is invalid under a new schema, updates can still go through as long as the invalid parts aren't changed. This provides schema upgrade safety without breaking users. "),l(" Be careful when deleting CRDs. Not only does it remove the API endpoint, it also wipes out all custom objects. Always back up if you need to preserve anything. ")]),_:1},16)}}};export{N as default};
